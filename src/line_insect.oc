#include "line_insect.oh"
#include "limits.h"
#include "float.h"

#define a0 A->S.x
#define a1 A->S.y
#define b0 A->E.x
#define b1 A->E.y
#define c0 B->S.x
#define c1 B->S.y
#define d0 B->E.x
#define d1 B->E.y


void line_insect(OPoint *p, OLine *A, OLine *B){
    obliv float area_abc = (a0 - c0) * (b1 - c1) - (a1 - c1) * (b0 - c0);
    obliv float area_abd = (a0 - d0) * (b1 - d1) - (a1 - d1) * (b0 - d0);
    
    obliv float area_cda = (c0 - a0) * (d1 - a1) - (c1 - a1) * (d0 - a0);
    obliv float area_cdb = area_cda + area_abc - area_abd; 

    obliv float t = area_cda / ( area_abd - area_abc );
    obliv float dx= t * (b0 - a0);
    obliv float dy= t * (b1 - a1);
    obliv bool is_cd_same_side_of_ab = (area_abc * area_abd) >= 0;
    obliv bool is_ab_same_side_of_cd = (area_cda * area_cdb) >= 0;
    obliv bool is_not_insect = is_cd_same_side_of_ab | is_ab_same_side_of_cd;
    obliv if (is_not_insect) {
        p->x = FLT_MIN;
        p->y = FLT_MIN;
    }else {
        p->x = a0 + dx;
        p->y = a1 + dy;
    }
}

void line_insect_opt(OPoint *p, OLine *A, OLine *B){
    obliv float area_abc = (a0 - c0) * (b1 - c1) - (a1 - c1) * (b0 - c0);
    obliv float area_abd = (a0 - d0) * (b1 - d1) - (a1 - d1) * (b0 - d0);
    obliv bool is_cd_same_side_of_ab = (area_abc * area_abd) >= 0;

    obliv float area_cda = (c0 - a0) * (d1 - a1) - (c1 - a1) * (d0 - a0);
    obliv float area_cdb = area_cda + area_abc - area_abd; 
    obliv bool is_ab_same_side_of_cd = (area_cda * area_cdb) >= 0;
    
    obliv bool ois_not_insect = is_ab_same_side_of_cd  | is_cd_same_side_of_ab;
    bool is_not_insect;
    revealOblivBool(&is_not_insect, ois_not_insect, 0);
    if (is_not_insect){
        p->x = FLT_MIN;
        p->y = FLT_MIN;
    }else{
        obliv float t = area_cda / ( area_abd - area_abc );
        obliv float dx= t * (b0 - a0);
        obliv float dy= t * (b1 - a1);
        p->x = a0 + dx;
        p->y = a1 + dy;
    }
}