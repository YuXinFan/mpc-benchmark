#ifndef OBLIV_RAM_OH
#define OBLIV_RAM_OH

#include <stdbool.h>
#include <obliv.oh>
#include <copy.oh>

#ifndef ORAM_DEFAULT_TYPE
#define ORAM_DEFAULT_TYPE ORAM_TYPE_SQRT
#endif

typedef struct oram oram;
typedef enum {ORAM_TYPE_AUTO,
	ORAM_TYPE_SQRT, ORAM_TYPE_CIRCUIT, ORAM_TYPE_LINEAR,
	ORAM_TYPE_FSSL, ORAM_TYPE_FSSL_ROM,
	ORAM_TYPE_FSSL_CPRG, ORAM_TYPE_FSSL_CPRG_ROM
} oram_type;

typedef void (* block_access_function)(OcCopy *, void * oram_block, void * external_block) obliv;

void oram_set_default_type(oram_type);

oram * oram_new(oram_type, OcCopy * cpy, size_t);
oram * oram_from_array(oram_type, OcCopy * cpy, size_t, void *);
void oram_free(oram *);

size_t oram_size(oram *);

obliv bool oram_read(void *, oram *, obliv size_t) obliv;
obliv bool oram_write(oram *, void *, obliv size_t) obliv;
obliv bool oram_apply(oram *, void *, block_access_function, obliv size_t) obliv;

#endif