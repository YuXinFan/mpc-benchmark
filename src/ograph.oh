#ifndef OBLIV_GRAPH
#define OBLIV_GRAPH

#include <obliv.oh>
#include "oram.oh"

typedef struct ograph_edge {
	obliv uint32_t v1;
	obliv uint32_t v2;
} ograph_edge;

typedef struct ograph_vertex_list {
	obliv uint32_t * list;
	obliv size_t size;
	size_t public_size;
} ograph_vertex_list;

typedef struct ograph_adjacency_matrix {
	oram * matrix;
	size_t vertices;
	size_t edges;
} ograph_adjacency_matrix;

ograph_adjacency_matrix * ograph_build_adjacency_matrix(size_t, ograph_edge *, size_t);
void ograph_adjacency_matrix_add_edges(ograph_adjacency_matrix *, ograph_edge *, size_t);
void ograph_free_adjacency_matrix(ograph_adjacency_matrix *);

ograph_vertex_list * ograph_vertex_list_new(size_t);
void ograph_get_adjacent_vertices(ograph_vertex_list *, ograph_adjacency_matrix *, obliv uint32_t);
void ograph_get_adjacent_vertices_obliv(ograph_vertex_list *, ograph_adjacency_matrix *, obliv uint32_t) obliv;
void ograph_free_vertex_list(ograph_vertex_list *);

ograph_vertex_list * ograph_breadth_first_search(ograph_adjacency_matrix *, obliv uint32_t);

#endif