#include <time.h>
#include <stdio.h>
#include <obliv.oh>
#include <stdbool.h>

#include "ochacha20.oh"
#include "test_generic.h"

static const char TESTNAME[] = "ochacha20";

char* testName() {
	return TESTNAME;
}

void testMain(void*varg) {

	/* test vectors in this file are taken from https://github.com/secworks/chacha_testvectors/blob/master/src/chacha_testvectors.txt */

	{
		obliv uint8_t input[64];
		uint8_t input_raw[64] = {
			0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x31, 0x36, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		};
		uint8_t expected_output[64] = {
			0x89, 0x67, 0x09, 0x52, 0x60, 0x83, 0x64, 0xfd, 0x00, 0xb2, 0xf9, 0x09, 0x36, 0xf0, 0x31, 0xc8, 
			0xe7, 0x56, 0xe1, 0x5d, 0xba, 0x04, 0xb8, 0x49, 0x3d, 0x00, 0x42, 0x92, 0x59, 0xb2, 0x0f, 0x46, 
			0xcc, 0x04, 0xf1, 0x11, 0x24, 0x6b, 0x6c, 0x2c, 0xe0, 0x66, 0xbe, 0x3b, 0xfb, 0x32, 0xd9, 0xaa, 
			0x0f, 0xdd, 0xfb, 0xc1, 0x21, 0x23, 0xd4, 0xb9, 0xe4, 0x4f, 0x34, 0xdc, 0xa0, 0x5a, 0x10, 0x3f
		};

		for (int ii = 0; ii < 64; ii++) {
			input[ii] = input_raw[ii];
		}

		oChacha20_20(input);

		bool success = true;
		for (int ii = 0; ii < 64; ii++) {
			uint8_t temp;
			revealOblivChar(&temp, input[ii], 0);
			success &= (temp == expected_output[ii]);
		}

		fprintf(stderr, "Test Item: %-60s %s\n", "oChacha20_20 - Test Case 1", (success)?STATUS_SUCCESS:STATUS_FAILURE);
		if (!success) {
			fprintf(stderr, "\tExpected Output:\t");
			for (int ii = 0; ii < 64; ii++) {
				fprintf(stderr, "%02hhX", expected_output[ii]);
			}
			fprintf(stderr, "\n\tActual Output: \t\t");
			for (int ii = 0; ii < 64; ii++) {
				uint8_t temp;
				revealOblivChar(&temp, input[ii], 0);
				fprintf(stderr, "%02hhX", temp);
			}
			fprintf(stderr, "\n");
		}
	}

	{
		obliv uint8_t input[64];
		uint8_t input_raw[64] = {
			0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33, 0x32, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b,
			0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		};
		uint8_t expected_output[64] = {
			0xc5, 0xd3, 0x0a, 0x7c, 0xe1, 0xec, 0x11, 0x93, 0x78, 0xc8, 0x4f, 0x48, 0x7d, 0x77, 0x5a, 0x85, 
			0x42, 0xf1, 0x3e, 0xce, 0x23, 0x8a, 0x94, 0x55, 0xe8, 0x22, 0x9e, 0x88, 0x8d, 0xe8, 0x5b, 0xbd, 
			0x29, 0xeb, 0x63, 0xd0, 0xa1, 0x7a, 0x5b, 0x99, 0x9b, 0x52, 0xda, 0x22, 0xbe, 0x40, 0x23, 0xeb, 
			0x07, 0x62, 0x0a, 0x54, 0xf6, 0xfa, 0x6a, 0xd8, 0x73, 0x7b, 0x71, 0xeb, 0x04, 0x64, 0xda, 0xc0
		};

		for (int ii = 0; ii < 64; ii++) {
			input[ii] = input_raw[ii];
		}

		oChacha20_20(input);

		bool success = true;
		for (int ii = 0; ii < 64; ii++) {
			uint8_t temp;
			revealOblivChar(&temp, input[ii], 0);
			success &= (temp == expected_output[ii]);
		}

		fprintf(stderr, "Test Item: %-60s %s\n", "oChacha20_20 - Test Case 2", (success)?STATUS_SUCCESS:STATUS_FAILURE);
		if (!success) {
			fprintf(stderr, "\tExpected Output:\t");
			for (int ii = 0; ii < 64; ii++) {
				fprintf(stderr, "%02hhX", expected_output[ii]);
			}
			fprintf(stderr, "\n\tActual Output: \t\t");
			for (int ii = 0; ii < 64; ii++) {
				uint8_t temp;
				revealOblivChar(&temp, input[ii], 0);
				fprintf(stderr, "%02hhX", temp);
			}
			fprintf(stderr, "\n");
		}
	}

	{
		obliv uint8_t input[64];
		uint8_t input_raw[64] = {
			0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x31, 0x36, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		};
		uint8_t expected_output[64] = {
			0x16, 0x63, 0x87, 0x9e, 0xb3, 0xf2, 0xc9, 0x94, 0x9e, 0x23, 0x88, 0xca, 0xa3, 0x43, 0xd3, 0x61, 
			0xbb, 0x13, 0x27, 0x71, 0x24, 0x5a, 0xe6, 0xd0, 0x27, 0xca, 0x9c, 0xb0, 0x10, 0xdc, 0x1f, 0xa7, 
			0x17, 0x8d, 0xc4, 0x1f, 0x82, 0x78, 0xbc, 0x1f, 0x64, 0xb3, 0xf1, 0x27, 0x69, 0xa2, 0x40, 0x97, 
			0xf4, 0x0d, 0x63, 0xa8, 0x63, 0x66, 0xbd, 0xb3, 0x6a, 0xc0, 0x8a, 0xbe, 0x60, 0xc0, 0x7f, 0xe8
		};

		for (int ii = 0; ii < 64; ii++) {
			input[ii] = input_raw[ii];
		}

		oChacha20_20(input);

		bool success = true;
		for (int ii = 0; ii < 64; ii++) {
			uint8_t temp;
			revealOblivChar(&temp, input[ii], 0);
			success &= (temp == expected_output[ii]);
		}

		fprintf(stderr, "Test Item: %-60s %s\n", "oChacha20_20 - Test Case 3", (success)?STATUS_SUCCESS:STATUS_FAILURE);
		if (!success) {
			fprintf(stderr, "\tExpected Output:\t");
			for (int ii = 0; ii < 64; ii++) {
				fprintf(stderr, "%02hhX", expected_output[ii]);
			}
			fprintf(stderr, "\n\tActual Output: \t\t");
			for (int ii = 0; ii < 64; ii++) {
				uint8_t temp;
				revealOblivChar(&temp, input[ii], 0);
				fprintf(stderr, "%02hhX", temp);
			}
			fprintf(stderr, "\n");
		}
	}

	fprintf(stderr, "\n");

}