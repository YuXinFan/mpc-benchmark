#include <obliv.oh>
#include "omatch.oh"
#include "test_generic.h"

static const char TESTNAME[] = "omatch";

char* testName() {
	return TESTNAME;
}

void testMain(void*varg) {

	{
		uint32_t mPrefsRaw[9] = {
			0, 1, 2,
			2, 0, 1,
			2, 0, 1,
		};

		uint32_t wPrefsRaw[9] = {
			0, 1, 2,
			2, 2, 0,
			1, 0, 1
		};

		uint32_t expected_output[3] = {
			0, 2, 1
		};

		obliv uint32_t mPrefs[9];
		obliv uint32_t wPrefs[9];
		obliv uint32_t output[3];

		for (int ii = 0; ii < 9; ii++) {
			mPrefs[ii] = feedOblivInt(mPrefsRaw[ii], 0);
			wPrefs[ii] = feedOblivInt(wPrefsRaw[ii], 0);
		}

		ogale_shapley(output, mPrefs, wPrefs, 3);

		bool success = true;

		for (int ii = 0; ii < 3; ii++) {
			uint32_t temp;
			revealOblivInt(&temp, output[ii], 0);
			success &= (temp == expected_output[ii]);
		}

		fprintf(stderr, "Test Item: %-70s %s\n", "ogale_shapley - 3 couples", (success)?STATUS_SUCCESS:STATUS_FAILURE);
	}

	{
		uint32_t rPrefsRaw[27] = {
			0, 1, 2,
			2, 0, 1,
			2, 0, 1,
			1, 0, 2,
			1, 2, 0,
			1, 2, 0,
			0, 2, 1,
			0, 1, 2,
			0, 1, 2
		};

		uint32_t hPrefsRaw[27] = {
			8, 3, 1,
			1, 2, 0,
			2, 6, 8,
			3, 0, 7,
			4, 7, 6,
			5, 1, 2,
			6, 4, 3,
			7, 5, 4,
			0, 8, 5
		};

		uint32_t expected_output[9] = {
			8, 6, 7,
			3, 1, 0,
			5, 4, 2
		};

		oroth_peranson_preference rPrefs[27];
		oroth_peranson_preference hPrefs[27];

		oroth_peranson_resident_data rData[9] = {
			{
				.preferences_bound = 3,
				.preferences = &rPrefs[0]
			},
			{
				.preferences_bound = 3,
				.preferences = &rPrefs[3]
			},
			{
				.preferences_bound = 3,
				.preferences = &rPrefs[6]
			},
			{
				.preferences_bound = 3,
				.preferences = &rPrefs[9]
			},
			{
				.preferences_bound = 3,
				.preferences = &rPrefs[12]
			},
			{
				.preferences_bound = 3,
				.preferences = &rPrefs[15]
			},
			{
				.preferences_bound = 3,
				.preferences = &rPrefs[18]
			},
			{
				.preferences_bound = 3,
				.preferences = &rPrefs[21]
			},
			{
				.preferences_bound = 3,
				.preferences = &rPrefs[24]
			}
		};

		oroth_peranson_hospital_data hData[3] = {
			{
				.preferences_bound = 9,
				.preferences = &hPrefs[0],
				.positions_bound = 3,
				.positions_available = 3,
			},
			{
				.preferences_bound = 9,
				.preferences = &hPrefs[9],
				.positions_bound = 3,
				.positions_available = 3,
			},
			{
				.preferences_bound = 9,
				.preferences = &hPrefs[18],
				.positions_bound = 3,
				.positions_available = 3,
			}
		};



		obliv int32_t matches[9];
		oroth_peranson_hospital_output output[3] = {
			{
				.matches = &matches[0],
				.positions_bound = 3,
				.positions_available = 3,
			},
			{
				.matches = &matches[9],
				.positions_bound = 3,
				.positions_available = 3,
			},
			{
				.matches = &matches[18],
				.positions_bound = 3,
				.positions_available = 3,
			},
		};


		for (int ii = 0; ii < 27; ii++) {
			rPrefs[ii].rid = ii / 3;
			rPrefs[ii].hid = ii % 3;
			rPrefs[ii].is_h = false;
			rPrefs[ii].rank = feedOblivInt(rPrefsRaw[ii], 0);

			hPrefs[ii].rid = ii / 3;
			hPrefs[ii].hid = ii % 3;
			hPrefs[ii].is_h = true;
			hPrefs[ii].rank = feedOblivInt(hPrefsRaw[ii], 0);
		}

		oroth_peranson(output, rData, 9, hData, 3);

		bool success = true;

		uint32_t temp;
		for (int ii = 0; ii < 3; ii++) {
			for (int jj = 0; jj < 3; jj ++) {
				revealOblivInt(&temp, output[ii].matches[jj], 0);
				success &= (temp == expected_output[ii*3+jj]);
			}
		}

		fprintf(stderr, "Test Item: %-70s %s\n", "oroth_peranson - 9 residents/3 hospitals", (success)?STATUS_SUCCESS:STATUS_FAILURE);
	}


}