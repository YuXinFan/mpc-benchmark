/******************************************
 ******************************************
 *** obig_set_native
 ******************************************
 ******************************************/

fprintf(stderr, "\n");

{	// obig_set_native - random data
	unsigned long long x;
	obig x_test;

	obig_init(&x_test, sizeof(long long));

	for (int ii = 0; ii < sizeof(long long)/sizeof(int); ii++) {
		x <<= sizeof(int) * 8;
		x += rand();
	}

	x = ocBroadcastLLong(x, 1);

	obig_set_native(&x_test, x);
	unsigned char temp;
	unsigned long long output;

	for (int ii = x_test.digits -1; ii >= 0; ii--) {
		revealOblivChar(&temp, x_test.data[ii], 0);
		output <<= 8;
		output += temp;
	}

	fprintf(stderr, "Test Item: %-70s %s\n", "obig_set_native - random data", (x == output)?STATUS_SUCCESS:STATUS_FAILURE);
	if ((x != output)) {
		fprintf(stderr, "\tExpected:\t%0llX\n\tActual: \t%0llX\n", x, output);
	}

	obig_free(&x_test);
}

{	// obig_set_native - random data, extended output
	unsigned long long x;
	obig x_test;

	obig_init(&x_test, sizeof(long long) * 2);

	for (int ii = 0; ii < sizeof(long long)/sizeof(int); ii++) {
		x <<= sizeof(int) * 8;
		x += rand();
	}

	x = ocBroadcastLLong(x, 1);

	obig_set_native(&x_test, x);
	unsigned char temp;
	unsigned long long output;

	for (int ii = x_test.digits -1; ii >= 0; ii--) {
		revealOblivChar(&temp, x_test.data[ii], 0);
		output <<= 8;
		output += temp;
	}

	fprintf(stderr, "Test Item: %-70s %s\n", "obig_set_native - random data, extended output", (x == output)?STATUS_SUCCESS:STATUS_FAILURE);
	if ((x != output)) {
		fprintf(stderr, "\tExpected:\t%0llX\n\tActual: \t%0llX\n", x, output);
	}

	obig_free(&x_test);
}

{	// obig_set_native - random data, truncated output
	unsigned long long x;
	obig x_test;

	obig_init(&x_test, sizeof(int));

	for (int ii = 0; ii < sizeof(long long)/sizeof(int); ii++) {
		x <<= sizeof(int) * 8;
		x += rand();
	}

	x = ocBroadcastLLong(x, 1);

	unsigned int expected = x;

	obig_set_native(&x_test, x);
	unsigned char temp;
	unsigned int output;

	for (int ii = x_test.digits -1; ii >= 0; ii--) {
		revealOblivChar(&temp, x_test.data[ii], 0);
		output <<= 8;
		output += temp;
	}

	fprintf(stderr, "Test Item: %-70s %s\n", "obig_set_native - random data, truncated output", (expected == output)?STATUS_SUCCESS:STATUS_FAILURE);
	if ((expected != output)) {
		fprintf(stderr, "\tExpected:\t%0X\n\tActual: \t%0X\n", expected, output);
	}

	obig_free(&x_test);
}